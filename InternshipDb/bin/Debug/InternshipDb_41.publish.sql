/*
Deployment script for InternshipDb

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "InternshipDb"
:setvar DefaultFilePrefix "InternshipDb"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Table [dbo].[PendingAdmins]...';


GO
CREATE TABLE [dbo].[PendingAdmins] (
    [Id]             INT            IDENTITY (1, 1) NOT NULL,
    [FirstName]      NVARCHAR (50)  NOT NULL,
    [LastName]       NVARCHAR (50)  NOT NULL,
    [Department]     NVARCHAR (50)  NOT NULL,
    [Username]       NVARCHAR (50)  NOT NULL,
    [Password]       NVARCHAR (MAX) NOT NULL,
    [HasPermissions] BIT            NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[PendingAdmins]...';


GO
ALTER TABLE [dbo].[PendingAdmins]
    ADD DEFAULT 0 FOR [HasPermissions];


GO
PRINT N'Creating Procedure [dbo].[spAdmin_AcceptPendingAdminById]...';


GO
CREATE PROCEDURE [dbo].[spAdmin_AcceptPendingAdminById]
	@Id int
AS
BEGIN
	INSERT INTO Admins
	(
		FirstName,
		LastName,
		Department,
		Username,
		[Password],
		HasPermissions
	)
	SELECT
		[FirstName], 
		[LastName], 
		[Department], 
		[Username], 
		[Password], 
		[HasPermissions]
	FROM
		PendingAdmins
	WHERE
		Id = @Id

	DELETE FROM PendingAdmins
	WHERE
	Id = @Id
	
	SELECT SCOPE_IDENTITY();
END
GO
PRINT N'Creating Procedure [dbo].[spAdmin_AddPendingAdmin]...';


GO
CREATE PROCEDURE [dbo].[spAdmin_AddPendingAdmin]
	@FirstName nvarchar(50),
	@LastName nvarchar(50),
	@Department nvarchar(50),
	@Username nvarchar(50),
	@Password nvarchar(MAX),
	@HasPermissions bit
AS
BEGIN
	INSERT INTO PendingAdmins
	(
		FirstName,
		LastName,
		Department,
		Username,
		[Password],
		HasPermissions
	)
	VALUES
	(
		@FirstName,
		@LastName,
		@Department,
		@Username,
		@Password,
		@HasPermissions
	)
	SELECT SCOPE_IDENTITY();
END
GO
PRINT N'Creating Procedure [dbo].[spTermDates_DeleteTerm]...';


GO
CREATE PROCEDURE [dbo].[spTermDates_DeleteTerm]
	@Id int
AS
BEGIN
	DELETE FROM TermDates

	WHERE
		Id = @Id;
END
GO
PRINT N'Update complete.';


GO
